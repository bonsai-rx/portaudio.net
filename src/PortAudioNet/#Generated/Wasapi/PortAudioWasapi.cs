// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.Runtime.InteropServices;

namespace PortAudioNet.Wasapi
{
    public unsafe static partial class PortAudioWasapi
    {
        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_GetAudioClient", ExactSpelling = true)]
        public static extern PaError GetAudioClient(PaStream* pStream, void** pAudioClient, int bOutput);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_UpdateDeviceList", ExactSpelling = true)]
        public static extern PaError UpdateDeviceList();

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_GetDeviceCurrentFormat", ExactSpelling = true)]
        public static extern int GetDeviceCurrentFormat(PaStream* pStream, void* pFormat, uint formatSize, int bOutput);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_GetDeviceDefaultFormat", ExactSpelling = true)]
        public static extern int GetDeviceDefaultFormat(void* pFormat, uint formatSize, int device);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_GetDeviceMixFormat", ExactSpelling = true)]
        public static extern int GetDeviceMixFormat(void* pFormat, uint formatSize, int device);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_GetDeviceRole", ExactSpelling = true)]
        public static extern int GetDeviceRole(int device);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_GetIMMDevice", ExactSpelling = true)]
        public static extern PaError GetIMMDevice(int device, void** pIMMDevice);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_IsLoopback", ExactSpelling = true)]
        public static extern int IsLoopback(int device);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_ThreadPriorityBoost", ExactSpelling = true)]
        public static extern PaError ThreadPriorityBoost(void** pTask, PaWasapiThreadPriority priorityClass);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_ThreadPriorityRevert", ExactSpelling = true)]
        public static extern PaError ThreadPriorityRevert(void* pTask);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_GetFramesPerHostBuffer", ExactSpelling = true)]
        public static extern PaError GetFramesPerHostBuffer(PaStream* pStream, uint* pInput, uint* pOutput);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_GetJackCount", ExactSpelling = true)]
        public static extern PaError GetJackCount(int device, int* pJackCount);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_GetJackDescription", ExactSpelling = true)]
        public static extern PaError GetJackDescription(int device, int jackIndex, PaWasapiJackDescription* pJackDescription);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapi_SetStreamStateHandler", ExactSpelling = true)]
        public static extern PaError SetStreamStateHandler(PaStream* pStream, delegate* unmanaged[Cdecl]<PaStream*, uint, uint, void*, void> fnStateHandler, void* pUserData);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapiWinrt_SetDefaultDeviceId", ExactSpelling = true)]
        public static extern PaError SetDefaultDeviceId(ushort* pId, int bOutput);

        [DllImport("portaudio.dll", CallingConvention = CallingConvention.Cdecl, EntryPoint = "PaWasapiWinrt_PopulateDeviceList", ExactSpelling = true)]
        public static extern PaError PopulateDeviceList(ushort** pId, ushort** pName, PaWasapiDeviceRole* pRole, uint count, int bOutput);
    }
}
